apiVersion: apps/v1
kind: Deployment
metadata:
  name: ups-mon
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:

      volumes:
        - name: config-volume
          configMap:
            name: ups-mon-config-etc-nut
      containers:
        - name: nut-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            limits:
              memory: "{{ .Values.resources.server.memory.limit }}"

          securityContext:
            privileged: true

          env:
            - name: TZ
              value: {{ .Values.config.timezone }}

            - name: ALERT_EMAIL_TO
              valueFrom:
                secretKeyRef:
                  name: ups-mon-secret
                  key: ALERT_EMAIL_TO

            - name: ALERT_EMAIL_FROM
              valueFrom:
                secretKeyRef:
                  name: ups-mon-secret
                  key: ALERT_EMAIL_FROM

            - name: ALERT_EMAIL_FROM_NAME
              valueFrom:
                secretKeyRef:
                  name: ups-mon-secret
                  key: ALERT_EMAIL_FROM_NAME

            - name: SMTP_HOST
              valueFrom:
                secretKeyRef:
                  name: ups-mon-secret
                  key: SMTP_HOST

            - name: SMTP_PORT
              valueFrom:
                secretKeyRef:
                  name: ups-mon-secret
                  key: SMTP_PORT

            - name: SMTP_USER
              valueFrom:
                secretKeyRef:
                  name: ups-mon-secret
                  key: SMTP_USER

            - name: SMTP_PASS
              valueFrom:
                secretKeyRef:
                  name: ups-mon-secret
                  key: SMTP_PASS

            - name: TWILIO_ACCOUNT
              valueFrom:
                secretKeyRef:
                  name: ups-mon-secret
                  key: TWILIO_ACCOUNT

            - name: TWILIO_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: ups-mon-secret
                  key: TWILIO_AUTH_TOKEN

            - name: TWILIO_FROM_NUMBER
              valueFrom:
                secretKeyRef:
                  name: ups-mon-secret
                  key: TWILIO_FROM_NUMBER

            - name: TWILIO_TO_NUMBER
              valueFrom:
                secretKeyRef:
                  name: ups-mon-secret
                  key: TWILIO_TO_NUMBER

          volumeMounts:
            - name: config-volume
              mountPath: /etc/nut/hosts.conf
              subPath: hosts.conf

            - name: config-volume
              mountPath: /etc/nut/nut.conf
              subPath: nut.conf

            - name: config-volume
              mountPath: /etc/nut/ups.conf
              subPath: ups.conf

            - name: config-volume
              mountPath: /etc/nut/upsd.conf
              subPath: upsd.conf

            - name: config-volume
              mountPath: /etc/nut/upsd.users
              subPath: upsd.users

            - name: config-volume
              mountPath: /etc/nut/upsmon.conf
              subPath: upsmon.conf

            {{- if .Values.test.enabled }}
            - name: config-volume
              mountPath: /etc/nut/mock-ups.dev
              subPath: mock-ups.dev
            {{- end }}

          ports:
            - name: ui-http
              protocol: TCP
              containerPort: 80
              
          livenessProbe:
            exec:
              command:
                - upsc
                - "{{ .Values.config.ups.name }}@{{ .Values.config.ups.location }}"
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}

        - name: nut-rest-api
          image: "{{ .Values.image.api.name}}:{{ .Values.image.api.tag}}"
          resources:
            limits:
              memory: "{{ .Values.resources.api.memory.limit }}"
          env:
            - name: TZ
              value: {{ .Values.config.timezone }}
            - name: CATALINA_OPTS
              value: "-Xms{{ .Values.config.api.xms }} -Xmx{{ .Values.config.api.xmx }}"
          volumeMounts:
          ports:
            - name: rest-api
              protocol: TCP
              containerPort: 8080

          readinessProbe:
            httpGet:
              path: /jnut/nut/servers
              port: 8080
            initialDelaySeconds: {{ .Values.readiness.api.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.api.periodSeconds }}
            failureThreshold: {{ .Values.readiness.api.failureThreshold }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{ end }}
